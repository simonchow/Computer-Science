import javafx.application.*;


import javafx.stage.*;
import javafx.scene.*;
import javafx.scene.paint.*;
import javafx.scene.shape.*;
import javafx.animation.*;

import static java.util.Calendar.*;
import java.util.Calendar;

public class SodukuSolver extends Application{
	public static void main (String [] args)
	{
		launch(args);
	}

	@Override public void start(Stage primaryStage) throws Exception
	{
		int radius = 300;
		int xcenter = 360;
		int ycenter = 360;
		int tickLength = 30;
		int shortTick = 10;
		
		Color trans = Color.TRANSPARENT;
		Color black = Color.BLACK;
		

		Rectangle frame = new Rectangle();
		frame.setX(100);
		frame.setY(100);
		frame.setWidth(800);
		frame.setHeight(800);
		frame.setFill(Color.WHITE);
		frame.setStroke(black);
		
		Line marks[] = new Line[12];  //Creates the larger tick marks of the clock)
		for (int i = 0; i < marks.length; i++)
		{
			marks[i] = new Line();
			marks[i].setStartX(Math.cos(Math.PI/6 * i) * radius + xcenter);
			marks[i].setStartY(Math.sin(Math.PI/6 * i) * radius + ycenter);
			marks[i].setEndX(Math.cos(Math.PI/6 * i) * (radius -tickLength) + xcenter);
			marks[i].setEndY(Math.sin(Math.PI/6 * i) * (radius - tickLength) + xcenter);
			marks[i].setStrokeWidth(3);
		}
		
		
		
		
		Group root = new Group();
		root.getChildren().addAll(frame);
		
		Scene scene = new Scene(root, 1000, 1000);
		primaryStage.setScene(scene);
		primaryStage.setTitle("Sudoku");
		primaryStage.show();
	}
}

       
